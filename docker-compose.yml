services:
  booking_db_service:
    image: postgres:16
    container_name: booking_db
    ports:
      - "6432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - myNetwork
    volumes:
      - pg-booking-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  booking_cache_service:
    image: redis:7.4
    container_name: booking_cache
    ports:
      - "7379:6379"
    networks:
      - myNetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  booking_nginx:
    image: nginx:latest
    container_name: booking_nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - myNetwork
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
      - ./web_nginx:/var/www/html:ro

    restart: unless-stopped

networks:
  myNetwork:
    external: true

volumes:
  pg-booking-data:
